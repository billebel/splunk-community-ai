# Splunk Community AI - Development Environment  
# Full stack + development Splunk instance for testing
# Usage: docker compose -f docker-compose.dev.yml up


services:
  # Catalyst MCP Server - Core service for all deployment scenarios
  catalyst-mcp:
    build: 
      context: .
      dockerfile: docker/Dockerfile
    container_name: catalyst-mcp-server
    ports:
      - "${MCP_PORT:-8443}:8443"
    depends_on:
      splunk-dev:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # MCP Server Configuration
      - MCP_PORT=8443
      - MCP_TRANSPORT=http
      
      # Splunk Connection - configured for development Splunk
      - SPLUNK_URL=${SPLUNK_URL:-https://splunk-dev:8089}
      - SPLUNK_AUTH_METHOD=${SPLUNK_AUTH_METHOD:-basic}
      
      # Basic Auth (used when SPLUNK_AUTH_METHOD=basic)
      - SPLUNK_USER=${SPLUNK_USER:-admin}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD:-changeme}
      
      # Token Auth (used when SPLUNK_AUTH_METHOD=token)
      - SPLUNK_TOKEN=${SPLUNK_TOKEN}
      
      # Optional: HEC Configuration for audit logging
      - SPLUNK_HEC_TOKEN=${SPLUNK_HEC_TOKEN}
      - SPLUNK_HEC_URL=${SPLUNK_HEC_URL:-https://splunk-dev:8088}
      - SPLUNK_HEC_INDEX=${SPLUNK_HEC_INDEX:-catalyst}
      
    volumes:
      - ./knowledge-packs:/app/knowledge-packs:ro
      - ./templates:/app/templates:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8443/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # LibreChat - Web chat interface
  librechat:
    image: ghcr.io/danny-avila/librechat-dev:latest
    container_name: librechat-web
    ports:
      - "${LIBRECHAT_PORT:-3080}:3080"
    depends_on:
      catalyst-mcp:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - PORT=3080
      - MONGO_URI=mongodb://mongodb:27017/LibreChat
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-DevelopmentKey123!}
      
      # Authentication & Registration
      - ALLOW_REGISTRATION=${ALLOW_REGISTRATION:-true}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      
      # AI Provider API Keys (optional - for non-MCP usage)
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      - ./librechat.yaml:/app/librechat.yaml:ro
      - librechat-data:/app/client/public/images
      - librechat-logs:/app/logs
    restart: unless-stopped

  # MongoDB - Database for LibreChat
  mongodb:
    image: mongo:7.0
    container_name: librechat-mongodb
    environment:
      - MONGO_INITDB_DATABASE=LibreChat
    volumes:
      - mongodb-data:/data/db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Meilisearch - Search engine for LibreChat
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: librechat-meilisearch
    environment:
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-DevelopmentKey123!}
      - MEILI_NO_ANALYTICS=true
    volumes:
      - meilisearch-data:/meili_data
    restart: unless-stopped

  # Development Splunk Instance
  splunk-dev:
    image: splunk/splunk:latest
    container_name: splunk-development
    hostname: splunk-dev
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_GENERAL_TERMS=--accept-sgt-current-at-splunk-com
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD:-changeme}
      - SPLUNK_HEC_TOKEN=${SPLUNK_HEC_TOKEN}
      - SPLUNK_HEC_SSL=false
      - SPLUNK_ENABLE_LISTEN=9997
    ports:
      - "8000:8000"   # Splunk Web interface
      - "8089:8089"   # Management API (used by MCP)
      - "8088:8088"   # HTTP Event Collector
      - "9997:9997"   # Splunk receiving port
      - "1514:1514"   # Network input (syslog)
    volumes:
      - splunk-etc:/opt/splunk/etc
      - splunk-var:/opt/splunk/var
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/en-US/account/login"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

# Named volumes for data persistence
volumes:
  librechat-data:
    name: catalyst-librechat-data
  librechat-logs:
    name: catalyst-librechat-logs
  mongodb-data:
    name: catalyst-mongodb-data
  meilisearch-data:
    name: catalyst-meilisearch-data
  splunk-etc:
    name: catalyst-splunk-etc
  splunk-var:
    name: catalyst-splunk-var

# Networks for service communication
networks:
  default:
    name: catalyst-network
    external: true