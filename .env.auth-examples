# Splunk Authentication Configuration Examples
# Copy the relevant section to your .env file based on your authentication method

# =============================================================================
# AUTHENTICATION METHOD SELECTION
# =============================================================================
# Set SPLUNK_AUTH_METHOD to choose your authentication approach:
# - "basic"      : Username/password (traditional, shared service account)
# - "token"      : Splunk authentication token (recommended for production)
# - "passthrough": User credentials forwarded from AI client (enterprise)

SPLUNK_AUTH_METHOD=basic

# =============================================================================
# METHOD 1: BASIC AUTHENTICATION (Username/Password)
# =============================================================================
# Uses traditional username/password with shared service account
# Suitable for: Development, testing, simple deployments

# Basic auth credentials (use when SPLUNK_AUTH_METHOD=basic)
SPLUNK_USER=your-splunk-username
SPLUNK_PASSWORD=your-splunk-password

# =============================================================================
# METHOD 2: TOKEN AUTHENTICATION (Recommended)
# =============================================================================
# Uses Splunk authentication token with "Authorization: Splunk <token>" header
# Suitable for: Production, secure deployments, service accounts
# More secure than basic auth, easier to rotate, granular permissions

# Token auth (use when SPLUNK_AUTH_METHOD=token)
SPLUNK_TOKEN=your-splunk-authentication-token

# How to get a Splunk token:
# 1. In Splunk Web: Settings > Tokens > New Token
# 2. Via REST API: curl -k -u admin:password "https://splunk:8089/services/authorization/tokens" -d name=catalyst-token
# 3. Via CLI: splunk auth-tokens create catalyst-token

# =============================================================================
# METHOD 3: PASSTHROUGH AUTHENTICATION (Enterprise)
# =============================================================================
# Each user authenticates with their own Splunk credentials
# Suitable for: Multi-user environments, enterprise SSO integration
# Note: Requires MCP client to provide user credentials

# Passthrough auth (use when SPLUNK_AUTH_METHOD=passthrough)
# No additional environment variables needed - credentials come from user context
# The MCP server will forward each user's credentials to Splunk

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Development with basic auth:
# SPLUNK_AUTH_METHOD=basic
# SPLUNK_USER=admin
# SPLUNK_PASSWORD=changeme

# Production with token auth:  
# SPLUNK_AUTH_METHOD=token
# SPLUNK_TOKEN=eyJraWQiOiJzcGx1bmsuc2VjcmV0IiwiYWxnIjoiSFMyNTYi...

# Enterprise with passthrough:
# SPLUNK_AUTH_METHOD=passthrough